(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt menu rctl
)

(deflayer engram
  [     _    _   _    _   _   _    _   _   _   _    ]    /     _
  _     b    y	 o    u	  '   S-'  l   d   w   v    z	 S-3   S-2
  @cap  c    i	 e    a	  ,   .	   h   t   s   n    q 	 _
  @lsft g    x	 j    k	  -   S-/	   r   m   f   p    _
  _     _    _ 	      	  @ssg   	       _   _	_ 
)

(deflayer shifted
  S-[   S-\  (unshift =)  S-grv  +   S-, S-.  S-6 S-7  S-5 S-8    S-]  (unshift \)   _
  _     _    _	  _   _   9   0    _	_   _ 	_    _  S-4  grv
  _     _    _	  _   _	  (unshift ;)   S-;  _   _   _   _    _ 	 _
  _  	_    _	  _   _	  _    S-1  _   _   _   _    _
  _     _    _ 	      	  _    	       _   _	_ 
)

(deflayer motion
  _    _    _    _    _   _    _  _   _   _   _    _    _    _
  _    _    _   _   _    _   _   _    pgup _  _    _   _  _
  _    _    _   _   _    home   left  down  up  right  end   _   _ 
  _    _    _   _   _    _   _       pgdn _    _ _  _ 
  _    _    _              _              _    _    _
)


(deflayer signs
  _    _    _    _    _   _    nlk  _   _   _   _    _    _    _
  _    S-1  S-2  [    ]   S-\   up    7	  8    9  S-8  _    _    _
  _    S-3  S-4  S-9  S-0  grv down  4	  5    6   +    _   _
  _    S-5  S-6	 S-[  S-]  S-grv S-7 1	  2    3   / 	_
  _    _    _              _              0   .    =
)

(deflayer func
  _    _    _    _    _   _    nlk  _   _   _   _    _    _    _
  _    F1   F2  F3   F4  F5  F6  F7  F8  F9  F10 F11 F12 _
  _    _    _   _   _    _   _    _  _   _   _   _   _ 
  _    _    _   _   _    _   _    _  _   _   _   _
  _    _    _              _              _    _    _
)

(defvar
  tap-timeout	200
  hold-timeout	200
  tt $tap-timeout
  ht $hold-timeout
)

;; defalias is used to declare a shortcut for a more complicated action to keep
;; the deflayer declarations clean and aligned. The alignment in deflayers is not
;; necessary, but is strongly recommended for ease of understanding visually.
;;
;; Aliases are referred to by `@<alias_name>`.
(defalias
  ;; tap: rmet , hold: toggle layer-switching layer while held
  menu (tap-hold $tt $ht rmet (layer-toggle layers))

  ;; layer-switch changes the base layer.
  eng (layer-switch engram)

  sgn (layer-toggle signs)
  ssg (tap-hold-release $tt $ht spc @sgn)

  fnc (layer-toggle func)
  ffn (tap-hold-release $tt $ht f @fnc)

  mtn (layer-toggle motion)
  mmt (tap-hold-release $tt $ht m @mtn)

  ;; tap for capslk, hold for lctl
  cap (tap-hold $tt $ht esc lctrl )
  lsft (multi lsft (layer-while-held shifted))
)

;; The `lrld` action stands for "live reload". This will re-parse everything
;; except for linux-dev, meaning you cannot live reload and switch keyboard
;; devices.
;;
;; The keys 1 and 2 switch the base layer to qwerty and dvorak respectively.
;;
;; Apart from the layer switching and live reload, all other keys are the
;; underscore _ which means "transparent". Transparent means the base layer
;; behaviour is used when pressing that key.
(deflayer layers
  _    @eng lrld _    _	   _    _    _    _    _    _    _    _  _ 
  _    _    _ 	 _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _
)

